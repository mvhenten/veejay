
Compiling Veejay ¶
Prerequisities ¶

Required:

    * MJPEG Tools
    * FFmpeg (libavcodec, libavformat, libavutil, libswscale)
    * libxml2 for saving project data
    * SDL for the video window
    * libdv for playback of DV Video
    * DirectFB for secundary head (TVOut)
    * Jack for audio playback
    * freetype2 for font rendering
    * libjpegMMX for SIMD optimized JPEG decoding
    * [http://www.gtk.org GTK-2.4 (GTK 2.6 recommended)
    * [http://www.gnome.org GdkPixbuf (comes with Gnome)
    * Cairo (needed for GVeejay Reloaded)
    * GtkCairo (needed for GVeejay Reloaded)
    * Libquicktime for Quicktime]
    * openGL library (gl.h and libGL.so) for the video window
    * Unicap API for more video input devices] 
    * Video4Linux II
    * libpthread

Optional:
    * liblo

You should check with the package manager of your distribution to see if all development packages have been installed, among others this includes:

    * libdv-dev
    * cairo
    * jack-dev
    * glib >= 2.4 dev
    * gtk >= 2.4 dev
    * libglade >= 2.2 dev
    * automake, autoconf, libtool, etc.
    * linux kernel header files 

If you are one of those lucky users with a distribution without any compiler pre-installed you will need to setup a build system by installing a gcc, automake, autoconf, etc etc.

    * Compiling On Ubuntu: doc/HowtoUbuntu.txt

Preperation ¶
Configuration ¶

Normally, you can just run 'configure'. If you have cloned the veejay git respository, you will need to run autogen.sh first to produce the configure file.


Options
-------

Before running configure, check if the PKG_CONFIG_PATH variable is setup correctly:

 $ echo $PKG_CONFIG_PATH

If echo is silent, you must set the PKG_CONFIG_PATH to point to the directory containing all your .pc files (like for example libdv.pc or jack.pc )

Configure options:
------------------

 --enable-debug	                 : Builds veejay for debugging purposes (disables optimization)
 --with-arch-target=<cpu_type>   : Builds veejay for a "generic" or a specific architecture.
                                   See gcc's 'Intel 386 and AMD x86-64 Options' for -march

Compilation:
------------

1. Get the sources from Veejay's repository:

  $ git clone git://code.dyne.org/veejay.git veejay

2. Enter the source directory and run autogen.sh

  $ cd veejay/veejay-current
  $ cd veejay-server
  $ sh autogen.sh

3. Run ./configure

  $ ./configure

4. Type 'make' to build veejay

  $ make 

5. Installing 

  $ sudo make install

6. Continue with building veejay-client and veejay-utils 

  $ cd veejay-client 
  $ sh autogen.sh
  $ ./configure
  $ make && sudo make install

  $ cd veejay-utils
  $ sh autogen.sh
  $ ./configure
  $ make && sudo make install


Running veejay 
--------------

Test if veejay works:

  $ veejay -d -n

Start another terminal and type:

 $ reloaded

or

 $ reloaded -t

Stopping veejay
---------------

Open another terminal

 $ sayVIMS "600:;"

(or press CTRL-C in the terminal running veejay)

